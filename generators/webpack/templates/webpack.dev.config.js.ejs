// "use strict";

var webpack = require('webpack');
var path = require('path');
<%
var isTs = js == 'ts';
var fileType = isTs ? "'.ts', '.tsx'" : "'.js', '.jsx'";
-%>
module.exports = {
  devtool: "eval",
  resolve: {
    extensions: ['', '.webpack.js', '.web.js', <%-fileType%> ]
  },
  entry: [
    'react-hot-loader/patch',
    'webpack-dev-server/client?http://0.0.0.0:8000',
    'webpack/hot/only-dev-server',
    './src/index' // 定义程序入口文件
  ],
  output: {
    path: path.join(__dirname, 'dist'), // 输出文件路径
    publicPath: '/',
    filename: 'bundle.js' // 输出文件名
  },
  module: {
    loaders: [
      <%_if (isTs) { -%>
      {
        test: /\.tsx?$/, // 通过正则匹配ts,tsx文件
        exclude: /node_modules/, // 跳过 node_modules 目录
        include: path.join(__dirname, 'src'),
        loaders: ['ts-loader?jsx=true&transpileOnly=true'] // 调用tsc->es5转换,并且启用react热替换
      }
      <%_ }else{ -%>
        {
          test: /\.jsx?$/, // 通过正则匹配js,jsx文件
          exclude: /node_modules/, // 跳过 node_modules 目录
          include: path.join(__dirname, 'src'),
          loaders: ['babel'] // 调用 babel进行es6->es5转换,并且启用react热替换
        }
      <%_ } -%>
    ]
  },
  plugins: [
    new webpack.HotModuleReplacementPlugin() // 启用热替换插件
  ]
};
